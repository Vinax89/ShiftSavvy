rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isAuthed() { return request.auth != null; }
    function uid() { return request.auth.uid; }

    function validUpload() {
      return request.resource.size < 10 * 1024 * 1024
        && (request.resource.contentType.matches('image/.*')
            || request.resource.contentType == 'application/pdf');
    }

    match /user_uploads/{userId}/paystubs/{fileId} {
      allow read, write: if isAuthed() && uid() == userId
        && (!resource.exists() ? validUpload() : false);
    }
    match /user_uploads/{userId}/receipts/{fileId} {
      allow read, write: if isAuthed() && uid() == userId
        && (!resource.exists() ? validUpload() : false);
    }

    match /imports-archive/{any=**} {
      allow read, write: if false;
    }

    match /{all=**} { allow read, write: if false; }
  }
}