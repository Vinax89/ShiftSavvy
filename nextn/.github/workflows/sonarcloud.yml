name: SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read   # allow PR decoration
  # security-events not needed here (CodeQL handles that lane)

concurrency:
  group: sonar-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonar:
    runs-on: ubuntu-latest

    # Skip forked PRs (no secrets) to avoid red X on external contributors
    if: ${{ github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # better blame/PR decoration

      - name: Setup Node (for tests/coverage)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install
        run: npm ci

      - name: Run unit tests with coverage (Vitest â†’ lcov)
        run: npm run test:coverage

      # Pin action for supply-chain safety (uses SHA)
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
          # Use config file to keep args out of YAML
          args: >
            -Dsonar.projectBaseDir=.
            -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ vars.SONAR_ORG }}
