
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isOwner(uid) {
      return request.auth.uid == uid;
    }
    function isTimestamp(x) { return x is timestamp; }
    function isNumber(x) { return x is int || x is float; }

    match /users/{uid} {
      allow read, write: if isOwner(uid);
    }
    match /users/{uid}/{document=**} {
      allow read, write: if isOwner(uid);
    }

    match /users/{uid}/transactions/{txnId} {
      allow read: if isOwner(uid);
      allow create, update: if isOwner(uid)
        && isNumber(request.resource.data.amount)
        && isTimestamp(request.resource.data.occurredAt);
    }

    match /users/{uid}/alerts/{alertId} {
      allow read: if isOwner(uid);

      allow update: if isOwner(uid)
        && request.resource.data.diff(resource.data).changedKeys().hasOnly(['ack','ackAt','state'])
        && request.resource.data.ack is bool
        && request.resource.data.ackAt is timestamp
        && request.resource.data.ack == true
        && request.resource.data.state == 'ack'
        && request.resource.data.ackAt >= resource.data.createdAt
        && request.resource.data.ackAt <= request.time;

      allow create, delete: if false;
    }

    match /users/{uid}/bnpl/events/{eventId} {
      allow read: if isOwner(uid);
      allow create: if isOwner(uid);
      allow update, delete: if false;
    }
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
