rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user doc
    match /users/{uid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }
    
    // Looser for demo purposes. In prod, lock this down.
    match /shifts/{shiftId} {
      allow read, write: if request.auth != null;
    }
    match /tax_profiles/{docId} {
      allow read, write: if request.auth != null;
    }
    match /debts_accounts/{docId} {
       allow read, write: if request.auth != null;
    }
    match /obligations/{docId} {
       allow read, write: if request.auth != null;
    }
     match /payoff_overrides/{docId} {
       allow read, write: if request.auth != null;
    }
    match /payoff_plans/{docId} {
       allow read, write: if request.auth != null;
    }
     match /payoff_plans_runs/{runId} {
      allow read, write: if request.auth != null;
      match /schedule/{ym} {
        allow read, write: if request.auth != null;
      }
    }

    match /paycheck_estimates/{estimateId} {
      allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    match /transactions/{txId} {
      allow read, write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // --- SPEC-3: Alerts & Settings ---
    match /users/{userId} {
      // Settings subcollection (single doc "app")
      match /settings/{docId} {
        allow read, write: if request.auth != null
                          && request.auth.uid == userId
                          && docId == "app";
      }

      // Alerts subcollection (server creates; user can read & ack)
      match /alerts/{alertId} {
        allow read: if request.auth != null && request.auth.uid == userId;

        // Only allow ack fields to change by the user
        allow update: if request.auth != null
                      && request.auth.uid == userId
                      && request.resource.data.diff(resource.data).changedKeys().hasOnly(['ack', 'ackAt']);

        // Prevent client-side creation/deletion
        allow create, delete: if false;
      }
    }

     match /users/{uid}/bnpl/contracts/{contractId} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow write: if false; // writes via Admin SDK only
    }
    match /users/{uid}/bnpl/contracts/{contractId}/installments/{instId} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow write: if false;
    }
    match /users/{uid}/bnpl/contracts/{contractId}/links/{linkId} {
      allow read: if request.auth != null && request.auth.uid == uid;
      allow write: if false;
    }
  }
}
