rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthed() { return request.auth != null; }
    function isOwner() { return isAuthed() && request.auth.uid == resource.data.userId; }
    function creatingAsOwner() { return isAuthed() && request.auth.uid == request.resource.data.userId; }

    // Users (self only)
    match /users/{uid} {
      allow read, write: if isAuthed() && request.auth.uid == uid;
    }

    // Generic owner-scoped collections used in Part B
    match /{colName=shifts|transactions|obligations|debts_accounts}/{id} {
      allow read, update, delete: if isOwner();
      allow create: if creatingAsOwner();
    }

    // Tax profile is keyed by arbitrary id; enforce owner in document body
    match /tax_profiles/{id} {
      allow read, update, delete: if isOwner();
      allow create: if creatingAsOwner();
    }

    // Paycheck estimates written by the client
    match /paycheck_estimates/{id} {
      allow read, update, delete: if isOwner();
      allow create: if creatingAsOwner();
    }
  }
}
